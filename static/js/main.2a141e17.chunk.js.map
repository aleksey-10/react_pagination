{"version":3,"sources":["components/PaginationPages/PaginationPages.js","components/Pagination/Pagination.js","components/PaginationSelect/PaginationSelect.js","components/PaginationWrapper/PaginationWrapper.js","components/ConnectedPagination/ConnectedPagination.js","App.js","index.js"],"names":["PaginationPages","i","props","pagesQuantity","page","this","pages","map","pageNumber","className","key","to","perPage","pagesList","prev","length","includes","push","PureComponent","Pagination","sideCoefficient","setUrlPage","aria-label","aria-hidden","Math","ceil","total","React","Component","PaginationSelect","handleOnChange","onChange","event","target","value","defaultValue","PaginationWrapper","state","setPages","history","Number","queryParams","ConnectedPagination","withQueryParams","stripUnknownKeys","keys","default","validate","test","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a141e17.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport class PaginationPages extends PureComponent {\n  get pages() {\n    const pagesList = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 1; i < this.props.pagesQuantity + 1; i++) {\n      if (this.#checkIndex(i)) {\n        const prev = pagesList[pagesList.length - 1];\n\n        if (prev && prev + 1 !== i) {\n          pagesList.includes(-1) ? pagesList.push(0) : pagesList.push(-1);\n        }\n\n        pagesList.push(i);\n      }\n    }\n\n    return pagesList;\n  }\n\n  #checkIndex = i => (\n    i === 1 || i === this.props.pagesQuantity || i === this.props.page\n    || i === this.props.page + 1 || i === this.props.page - 1\n  )\n\n  render() {\n    return (\n      <>\n        {\n          this.pages.map(pageNumber => (\n            <li\n              className={\n                `page-item ${this.props.page === pageNumber && 'active'}`\n              }\n              key={pageNumber}\n            >\n              {\n                pageNumber > 0\n                  ? (\n                    <NavLink\n                      to={`/?page=${pageNumber}&perPage=${this.props.perPage}`}\n                      className=\"page-link\"\n                    >\n                      {pageNumber}\n                    </NavLink>\n                  )\n                  : (\n                    <span className=\"page-link disabled\">...</span>\n                  )\n              }\n            </li>\n          ))\n        }\n      </>\n    );\n  }\n}\n\nPaginationPages.propTypes = {\n  pagesQuantity: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { PaginationPages } from '../PaginationPages/PaginationPages';\n\nexport class Pagination extends React.Component {\n  componentDidUpdate() {\n    if (this.props.page > this.pagesQuantity) {\n      this.props.setUrlPage(this.pagesQuantity, this.props.perPage);\n    }\n  }\n\n  get pagesQuantity() {\n    return Math.ceil(this.props.total / this.props.perPage);\n  }\n\n  #setPage = sideCoefficient => this.props.page + sideCoefficient\n\n  render() {\n    return (\n      <nav\n        aria-label=\"Page navigation example\"\n        className=\"row justify-content-center\"\n      >\n        <ul className=\"pagination\">\n          <li className={`page-item ${this.props.page - 1 < 1 && 'disabled'}`}>\n            <NavLink\n              className=\"page-link\"\n              to={\n                `/?page=${this.#setPage(-1)}&perPage=${this.props.perPage}`\n              }\n              aria-label=\"Previous\"\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </NavLink>\n          </li>\n          <PaginationPages\n            pagesQuantity={this.pagesQuantity}\n            page={this.props.page}\n            perPage={this.props.perPage}\n          />\n          <li className={`page-item ${\n            this.props.page + 1 > this.pagesQuantity && 'disabled'\n          }`}\n          >\n            <NavLink\n              className=\"page-link\"\n              to={\n                `/?page=${this.#setPage(1)}&perPage=${this.props.perPage}`\n              }\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  setUrlPage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PaginationSelect = ({ page, handleOnChange }) => (\n  <select\n    className=\"form-control m-3\"\n    onChange={event => handleOnChange(page, event.target.value)}\n    defaultValue=\"Items per page\"\n  >\n    <option>Items per page</option>\n    <option>3</option>\n    <option>5</option>\n    <option>10</option>\n    <option>20</option>\n  </select>\n);\n\nPaginationSelect.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination } from '../Pagination';\nimport { PaginationSelect } from '../PaginationSelect/PaginationSelect';\n\nexport class PaginationWrapper extends React.Component {\n  state = {\n    total: 42,\n  }\n\n  get page() {\n    return Number(this.props.queryParams.page);\n  }\n\n  get perPage() {\n    return Number(this.props.queryParams.perPage);\n  }\n\n  setPages = (page, perPage) => (\n    this.props.history.push(`/?page=${page}&perPage=${perPage}`)\n  )\n\n  #getLastItemOnPage = () => (\n    this.page * this.perPage > this.state.total\n      ? this.state.total\n      : this.page * this.perPage\n  )\n\n  render() {\n    return (\n      <>\n        <h2 className=\"display-4 text-center\">\n          { this.page * this.perPage - this.perPage + 1 }\n          &nbsp;-&nbsp;\n          { this.#getLastItemOnPage() }\n          &nbsp;of&nbsp;\n          { this.state.total}\n        </h2>\n        <PaginationSelect handleOnChange={this.setPages} page={this.page} />\n        <Pagination\n          page={this.page}\n          perPage={this.perPage}\n          total={this.state.total}\n          setUrlPage={this.setPages}\n        />\n      </>\n    );\n  }\n}\n\nPaginationWrapper.propTypes = {\n  queryParams: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n","import withQueryParams from 'react-router-query-params';\nimport { PaginationWrapper } from '../PaginationWrapper';\n\nexport const ConnectedPagination = withQueryParams({\n  stripUnknownKeys: false,\n  keys: {\n    page: {\n      default: '1',\n      validate: value => !!value && /\\d/.test(value),\n    },\n    perPage: {\n      default: '5',\n      validate: value => !!value && /\\d/.test(value),\n    },\n  },\n})(PaginationWrapper);\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { ConnectedPagination } from './components/ConnectedPagination';\n\nconst App = () => (\n  <div className=\"App text-center\">\n    <h1 className=\"mb-5\">Pagination</h1>\n    <HashRouter>\n      <Route path=\"/\" component={ConnectedPagination} />\n    </HashRouter>\n    <p className=\"pt-5\">Try change url</p>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}